/*RODAR NO BACKUP*/
COPY frota_veiculo(id,bem_id, placa, renavam,ano,cor,combustivel,qtd_assento) 
TO '/home/raislan/Documentos/server/veiculo.csv' DELIMITER ',' CSV HEADER;

COPY frota_veiculo_percurso(veiculo_id, km_inicial, km_final,hora_inicial,
     hora_final,destino_percurso,motorista_id,solicitante,numero_sei,qtd_pessoas,status_percurso,link_sei_percurso) 
TO '/home/raislan/Documentos/server/percurso.csv' DELIMITER ',' CSV HEADER;

COPY frota_veiculo_despesa(veiculo_id, valor_gasto, tipo_gasto,
	  currency_id,complemento,motorista_id,numero_nota,empresa,link_sei_despesa) 
TO '/home/raislan/Documentos/server/despesa.csv' DELIMITER ',' CSV HEADER;



/*RODAR NO PRODUÇÃO*/

ALTER SEQUENCE frota_veiculo_id_seq RESTART WITH 6


COPY frota_veiculo(id,bem_id, placa, renavam,ano,cor,combustivel,qtd_assento)
FROM '/home/raislan/Documentos/server/veiculo.csv'
DELIMITER ','
CSV HEADER;

COPY frota_veiculo_percurso(veiculo_id, km_inicial, km_final,hora_inicial,
     hora_final,destino_percurso,motorista_id,solicitante,numero_sei,qtd_pessoas,status_percurso,link_sei_percurso)
FROM '/home/raislan/Documentos/server/percurso.csv'
DELIMITER ','
CSV HEADER;

COPY frota_veiculo_despesa(veiculo_id, valor_gasto, tipo_gasto,
	  currency_id,complemento,motorista_id,numero_nota,empresa,link_sei_despesa) 
FROM '/home/raislan/Documentos/server/despesa.csv' DELIMITER ',' CSV HEADER;



SELECT sum(atestado.dias) as afastamento,
CASE 
    WHEN partner.function = 'Servidor Carreira'
	OR  partner.function = 'Cargo Comissionado'
	OR  partner.function = 'Auxiliar Da Justica' THEN 'Servidor' 
	WHEN partner.function = 'Magistrado' THEN 'Magistrado'
END AS categoria
from saude_atendimento_atestado as atestado
JOIN saude_atendimento_consulta AS consulta ON consulta.id = atestado.consulta_id
JOIN saude_paciente AS paciente ON paciente.id = consulta.paciente_id
JOIN res_partner AS partner ON partner.id = paciente.partner_id
where consulta.atestado = 'true' and EXTRACT(YEAR FROM consulta.create_date) = 2020 
and partner.function in ('Servidor Carreira','Magistrado','Cargo Comissionado','Auxiliar Da Justica')
GROUP BY categoria



SELECT 
        CASE 
            WHEN extract(year from age(partner.birthday)) <= 35 THEN '1'
            WHEN extract(year from age(partner.birthday)) BETWEEN 36 and 45 THEN '2'
            WHEN extract(year from age(partner.birthday)) BETWEEN 46 and 55 THEN '3'
            WHEN extract(year from age(partner.birthday)) BETWEEN 56 and 65 THEN '4'
            WHEN extract(year from age(partner.birthday)) >= 66 THEN '5' END AS faixa,
		categoria.codigo,
        CASE 
            WHEN partner.title = 3 THEN 'M'
            WHEN partner.title = 1 OR partner.title = 2 THEN 'F' END AS sexo1,
	    CASE 
		WHEN partner.function = 'Servidor Carreira'
		OR  partner.function = 'Cargo Comissionado'
		OR  partner.function = 'Auxiliar Da Justica' THEN '2' 
		WHEN partner.function = 'Magistrado' THEN '1'
		END AS categoria,		
        SUM(atestado.dias) AS afastamento,
        COUNT(atestado.id) AS frequencia,
		date_part('year', consulta.create_date)::BIGINT AS year
        FROM saude_atendimento_atestado AS atestado 
            JOIN saude_atendimento_atestado_saude_cid_subcategoria_rel ON atestado.id = saude_atendimento_atestado_id
            JOIN saude_cid_subcategoria AS subcategoria ON subcategoria.id = saude_cid_subcategoria_id
	    JOIN saude_cid_categoria AS categoria ON categoria.id = subcategoria.categoria_id
            JOIN saude_atendimento_consulta AS consulta ON consulta.id = atestado.consulta_id 
            JOIN saude_paciente AS paciente ON paciente.id = consulta.paciente_id
            JOIN res_partner AS partner ON partner.id = paciente.partner_id
        where EXTRACT(YEAR FROM consulta.create_date) = 2020 			
        GROUP BY 
            sexo1, faixa,categoria,categoria.codigo,year
        ORDER BY faixa
	
	
	











SELECT
locais.name as Localização,
tombo as Tombamento,
CASE 
    WHEN estado = 'nov' THEN 'Novo'
	WHEN estado = 'bom' THEN 'Bom'
	WHEN estado = 'oci' THEN 'Ocioso'
	WHEN estado = 'rec' THEN 'Antieconômico'
	WHEN estado = 'ant' THEN 'Novo'
	WHEN estado = 'irr' THEN 'Irrecuperável'
	ELSE 'FALSO'
END AS Condição,
categoria.name as Descrição,
CASE 
    WHEN especie = 'compra_nf' THEN 'Compra'
	WHEN especie = 'doacao_td' THEN 'Doação'
	WHEN especie = 'cessao_tc' THEN 'Cessão/Empréstimo'
	WHEN especie = 'permuta_tp' THEN 'Permuta'
	WHEN especie = 'incorporacao_ti' THEN 'Incorporação'
	ELSE 'FALSO'
END AS Aquisição,
CASE
    WHEN doc_aquisicao.data_nota IS NOT null THEN to_char(doc_aquisicao.data_nota,'YYYY-MM-DD')
	ELSE 'FALSO'
END as DataAqusição,
CASE 
    WHEN vbn > 0 THEN CONCAT('R$ ', to_char(vbn::float,'FM999999990.00'))
	WHEN vbn = 0 THEN CONCAT('R$ ', to_char(vbn::float,'FM999999990.00'))
END AS Valor,
CASE
    WHEN categoria.cat_dep_id IS NOT null THEN
	   CASE
	    	WHEN vbn > 0.0 AND doc_aquisicao_id IS NOT null THEN
			    CASE
		   		 	WHEN (DATE_PART('year', CURRENT_DATE) - DATE_PART('year', doc_aquisicao.data_nota::date)) > 0 THEN
					    CONCAT('R$ ', to_char((vbn - (depreciacao.valor_residual * vbn))/(DATE_PART('year', CURRENT_DATE) - DATE_PART('year', doc_aquisicao.data_nota::date))::float,'FM999999990.00'))
			        ELSE
					    CONCAT('R$ ',to_char(vbn - (depreciacao.valor_residual * vbn)::float,'FM999999990.00'))
			     END 
		    ELSE 'R$ 0.00'		 
		END
    ELSE 'R$ 0.00'	
END	AS ValorAtual,
CASE
    WHEN categoria.cat_dep_id IS NOT null THEN
	   CASE
	    	WHEN vbn > 0.0 AND doc_aquisicao_id IS NOT null THEN
			    CASE
		   		 	WHEN (DATE_PART('year', CURRENT_DATE) - DATE_PART('year', doc_aquisicao.data_nota::date)) > 0 THEN
					    CONCAT('R$ ', to_char((vbn)-(vbn - (depreciacao.valor_residual * vbn))/(DATE_PART('year', CURRENT_DATE) - DATE_PART('year', doc_aquisicao.data_nota::date))::float,'FM999999990.00'))
			        ELSE
					    CONCAT('R$ ',to_char((vbn)-(vbn - (depreciacao.valor_residual * vbn))::float,'FM999999990.00'))
			     END 
		    ELSE 'R$ 0.00'		 
		END
    ELSE 'R$ 0.00'		
END	AS ValorDeprecicao
FROM patrimonio_bem as bem
JOIN patrimonio_local AS locais ON locais.id = bem.local_id
JOIN patrimonio_categoria AS categoria ON categoria.id = bem.categoria_id
LEFT JOIN patrimonio_depreciacao AS depreciacao ON depreciacao.id = categoria.cat_dep_id
LEFT JOIN  patrimonio_documento_aquisicao AS doc_aquisicao ON doc_aquisicao.id = bem.doc_aquisicao_id

	 

